import tensorflow as tf
INPUT_NODE = 784  #输入图像的像素值28*28
OUTPUT_NODE = 10  #输出十个数
LAYER1_NODE = 500  #隐藏层de结点个数


def get_weight(shape, regularizer):
    w = tf.Variable(tf.truncated_normal(shape, stddev=0.1))
    if regularizer != None: tf.add_to_collection('losses', tf.contrib.layers.l2_regularizer(regularizer)(w))
    return w



def get_bias(shape):
    b = tf.Variable(tf.zeros(shape))
    return b


def forward(x, regularizer):
    w1 = get_weight([INPUT_NODE, LAYER1_NODE], regularizer)  #第一层参数
    b1 = get_bias([LAYER1_NODE])                             #第一层偏置
    y1 = tf.nn.relu(tf.matmul(x, w1) + b1)                   #第一层输出

    w2 = get_weight([LAYER1_NODE, OUTPUT_NODE], regularizer)
    b2 = get_bias([OUTPUT_NODE])
    y = tf.matmul(y1, w2) + b2
    return y
